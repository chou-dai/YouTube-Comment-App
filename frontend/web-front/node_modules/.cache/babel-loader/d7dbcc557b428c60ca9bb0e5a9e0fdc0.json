{"ast":null,"code":"/* tslint:disable */\n\n/* eslint-disable */\n\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nimport { RequiredError } from \"./base\";\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\n\nexport const assertParamExists = function (functionName, paramName, paramValue) {\n  if (paramValue === null || paramValue === undefined) {\n    throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n  }\n};\n/**\n *\n * @export\n */\n\nexport const setApiKeyToObject = async function (object, keyParamName, configuration) {\n  if (configuration && configuration.apiKey) {\n    const localVarApiKeyValue = typeof configuration.apiKey === 'function' ? await configuration.apiKey(keyParamName) : await configuration.apiKey;\n    object[keyParamName] = localVarApiKeyValue;\n  }\n};\n/**\n *\n * @export\n */\n\nexport const setBasicAuthToObject = function (object, configuration) {\n  if (configuration && (configuration.username || configuration.password)) {\n    object[\"auth\"] = {\n      username: configuration.username,\n      password: configuration.password\n    };\n  }\n};\n/**\n *\n * @export\n */\n\nexport const setBearerAuthToObject = async function (object, configuration) {\n  if (configuration && configuration.accessToken) {\n    const accessToken = typeof configuration.accessToken === 'function' ? await configuration.accessToken() : await configuration.accessToken;\n    object[\"Authorization\"] = \"Bearer \" + accessToken;\n  }\n};\n/**\n *\n * @export\n */\n\nexport const setOAuthToObject = async function (object, name, scopes, configuration) {\n  if (configuration && configuration.accessToken) {\n    const localVarAccessTokenValue = typeof configuration.accessToken === 'function' ? await configuration.accessToken(name, scopes) : await configuration.accessToken;\n    object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n  }\n};\n\nfunction setFlattenedQueryParams(urlSearchParams, parameter) {\n  let key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n  if (typeof parameter === \"object\") {\n    if (Array.isArray(parameter)) {\n      parameter.forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n    } else {\n      Object.keys(parameter).forEach(currentKey => setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`));\n    }\n  } else {\n    if (urlSearchParams.has(key)) {\n      urlSearchParams.append(key, parameter);\n    } else {\n      urlSearchParams.set(key, parameter);\n    }\n  }\n}\n/**\n *\n * @export\n */\n\n\nexport const setSearchParams = function (url) {\n  const searchParams = new URLSearchParams(url.search);\n\n  for (var _len = arguments.length, objects = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    objects[_key - 1] = arguments[_key];\n  }\n\n  setFlattenedQueryParams(searchParams, objects);\n  url.search = searchParams.toString();\n};\n/**\n *\n * @export\n */\n\nexport const serializeDataIfNeeded = function (value, requestOptions, configuration) {\n  const nonString = typeof value !== 'string';\n  const needsSerialization = nonString && configuration && configuration.isJsonMime ? configuration.isJsonMime(requestOptions.headers['Content-Type']) : nonString;\n  return needsSerialization ? JSON.stringify(value !== undefined ? value : {}) : value || \"\";\n};\n/**\n *\n * @export\n */\n\nexport const toPathString = function (url) {\n  return url.pathname + url.search + url.hash;\n};\n/**\n *\n * @export\n */\n\nexport const createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n  return function () {\n    let axios = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : globalAxios;\n    let basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : BASE_PATH;\n    const axiosRequestArgs = { ...axiosArgs.options,\n      url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url\n    };\n    return axios.request(axiosRequestArgs);\n  };\n};","map":{"version":3,"names":["RequiredError","DUMMY_BASE_URL","assertParamExists","functionName","paramName","paramValue","undefined","setApiKeyToObject","object","keyParamName","configuration","apiKey","localVarApiKeyValue","setBasicAuthToObject","username","password","setBearerAuthToObject","accessToken","setOAuthToObject","name","scopes","localVarAccessTokenValue","setFlattenedQueryParams","urlSearchParams","parameter","key","Array","isArray","forEach","item","Object","keys","currentKey","has","append","set","setSearchParams","url","searchParams","URLSearchParams","search","objects","toString","serializeDataIfNeeded","value","requestOptions","nonString","needsSerialization","isJsonMime","headers","JSON","stringify","toPathString","pathname","hash","createRequestFunction","axiosArgs","globalAxios","BASE_PATH","axios","basePath","axiosRequestArgs","options","request"],"sources":["/home/app/frontend/src/client/common.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * \n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: \n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n\nimport { Configuration } from \"./configuration\";\nimport { RequiredError, RequestArgs } from \"./base\";\nimport { AxiosInstance, AxiosResponse } from 'axios';\n\n/**\n *\n * @export\n */\nexport const DUMMY_BASE_URL = 'https://example.com'\n\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexport const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {\n    if (configuration && configuration.apiKey) {\n        const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n            ? await configuration.apiKey(keyParamName)\n            : await configuration.apiKey;\n        object[keyParamName] = localVarApiKeyValue;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBasicAuthToObject = function (object: any, configuration?: Configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const accessToken = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken()\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + accessToken;\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {\n    if (configuration && configuration.accessToken) {\n        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n            ? await configuration.accessToken(name, scopes)\n            : await configuration.accessToken;\n        object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n    }\n}\n\nfunction setFlattenedQueryParams(urlSearchParams: URLSearchParams, parameter: any, key: string = \"\"): void {\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            (parameter as any[]).forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        } \n        else {\n            Object.keys(parameter).forEach(currentKey => \n                setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`)\n            );\n        }\n    } \n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        } \n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n\n/**\n *\n * @export\n */\nexport const setSearchParams = function (url: URL, ...objects: any[]) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n}\n\n/**\n *\n * @export\n */\nexport const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n}\n\n/**\n *\n * @export\n */\nexport const toPathString = function (url: URL) {\n    return url.pathname + url.search + url.hash\n}\n\n/**\n *\n * @export\n */\nexport const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {\n    return <T = unknown, R = AxiosResponse<T>>(axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {\n        const axiosRequestArgs = {...axiosArgs.options, url: (configuration?.basePath || basePath) + axiosArgs.url};\n        return axios.request<T, R>(axiosRequestArgs);\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}